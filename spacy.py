# -*- coding: utf-8 -*-
"""spacy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CIm9BUm23PkOKJUPAQnUaSpxT_5Cd6QH

Spacy--------------------------------------------------------------------------------------------
"""

pip install spacy

import spacy
nlp = spacy.load('en_core_web_sm')

def show_ents(doc):
    if doc.ents:
        for ent in doc.ents:
            print(ent.text+' - '+ent.label_+' - '+str(spacy.explain(ent.label_)))
    else:
        print('No named entities found.')

correct_answer = nlp("Christopher Columbus and his partners discovered America in 1492")

keyword_list=['Christopher Columbus', 'partners', '1492']

from spacy.tokens import Span
from spacy.matcher import PhraseMatcher
def add_newEnt(doc, phrase_list, nerType):
  matcher = PhraseMatcher(nlp.vocab)
  new_List=[]
  for ent in doc.ents:
    new_List.append(ent.text)
  phrase_List1=[]
  for keyword in phrase_list:
    if keyword not in new_List:
      phrase_List1.append(keyword)
  phrase_patterns = [nlp(text) for text in phrase_List1]

  # Apply the patterns to our matcher object:
  matcher.add(nerType, None, *phrase_patterns)

  # Apply the matcher to our Doc object:
  matches = matcher(doc)
  keyType = doc.vocab.strings[nerType]

  new_ents = [Span(doc, match[1],match[2],label=keyType) for match in matches]
  doc.ents = list(doc.ents) + new_ents
  show_ents(doc)

show_ents(correct_answer)

student_response = nlp("The first partners who landed in America when there was the land bridge from Asia to America at the berring sea are the people who discovered America. The Vikings came later so we can say they discovered America. Precisely how do discover allowed where people are living there? What sense does that make? Christopher Columbus was the first European in modern times to see America. That does not mean it is covered it.")
show_ents(student_response)

add_newEnt(student_response,keyword_list,"keyword")

def score(student_response, keyword_list, weighs):
    grade=0
    matcher = PhraseMatcher(nlp.vocab)
    new_List=[]
    for ent in student_response.ents:
      new_List.append(ent.text)
    phrase_List1=[]
    for i in range(0, len(keyword_list)):
      if keyword_list[i] in new_List:
        phrase_List1.append(keyword_list[i])
        grade+=100*weighs[i]
    print(phrase_List1)
    print( "score="+ str(grade))

keyword_list=['Christopher Columbus', 'partners', '1492']
weighs=[0.4,0.2,0.3]
# show_ents(student_response)
score(student_response, keyword_list,weighs)